export type TokenType =
  | "Punctuation:LeftParen"
  | "Punctuation:RightParen"
  | "Punctuation:LeftBrace"
  | "Punctuation:RightBrace"
  | "Punctuation:Comma"
  | "Punctuation:Dot"
  | "Punctuation:Semicolon"
  | "Operator:Minus"
  | "Operator:Plus"
  | "Operator:Slash"
  | "Operator:Asterisk"
  | "Operator:Bang"
  | "Operator:BangEqual"
  | "Operator:Equal"
  | "Operator:EqualEqual"
  | "Operator:Greater"
  | "Operator:GreaterEqual"
  | "Operator:Less"
  | "Operator:LessEqual"
  | "Keyword:in"
  | "Keyword:return"
  | "Keyword:exit"
  | "Keyword:if"
  | "Keyword:else"
  | "Keyword:match"
  | "Keyword:for"
  | "Keyword:while"
  | "Keyword:break"
  | "Keyword:continue"
  | "Keyword:let"
  | "Keyword:const"
  | "Keyword:as"
  | "Keyword:int"
  | "Keyword:i8"
  | "Keyword:i16"
  | "Keyword:i32"
  | "Keyword:i64"
  | "Keyword:uint"
  | "Keyword:u8"
  | "Keyword:u16"
  | "Keyword:u32"
  | "Keyword:u64"
  | "Keyword:float"
  | "Keyword:f16"
  | "Keyword:f32"
  | "Keyword:f64"
  | "Keyword:char"
  | "Keyword:string"
  | "Keyword:bool"
  | "Keyword:void"
  | "Keyword:null"
  | "Keyword:enum"
  | "Keyword:struct"
  | "Keyword:alias"
  | "Keyword:Array"
  | "Keyword:Tuple"
  | "Keyword:Map"
  | "Keyword:Callable"
  | "Keyword:class"
  | "Keyword:constructor"
  | "Keyword:destructor"
  | "Keyword:extends"
  | "Keyword:implements"
  | "Keyword:abstract"
  | "Keyword:pub"
  | "Keyword:getter"
  | "Keyword:setter"
  | "Keyword:static"
  | "Keyword:drop"
  | "Keyword:alloc"
  | "Keyword:typeof"
  | "Keyword:sizeof"
  | "Keyword:inline"
  | "Keyword:fn"
  | "Keyword:mod"
  | "Keyword:use"
  | "Literal:Identifier"
  | "Literal:String"
  | "Literal:Integer"
  | "Literal:Float"
  | "Literal:True"
  | "Literal:False"
  | "Literal:Null";

export interface Token {
  type: TokenType;
  value: string;
  line: number;
  column: number;
}
